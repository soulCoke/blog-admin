<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.blog.comment.mapper.ArticleCommentMapper">
    
    <resultMap type="ArticleComment" id="ArticleCommentResult">
        <result property="id"    column="id"    />
        <result property="createTime"    column="createTime"    />
        <result property="deleteTime"    column="deleteTime"    />
        <result property="status"    column="status"    />
        <result property="userId"    column="userId"    />
        <result property="content"    column="content"    />
        <result property="articleId"    column="articleId"    />
        <result property="replyId"    column="replyId"    />
    </resultMap>

    <sql id="selectArticleCommentVo">
        select id, createTime, deleteTime, status, userId, content, articleId, replyId from blog_article_comment
    </sql>

    <select id="selectArticleCommentList" parameterType="ArticleComment" resultMap="ArticleCommentResult">
        <include refid="selectArticleCommentVo"/>
        <where>  
            <if test="createTime != null "> and createTime = #{createTime}</if>
        </where>
    </select>
    
    <select id="selectArticleCommentById" parameterType="Long" resultMap="ArticleCommentResult">
        <include refid="selectArticleCommentVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertArticleComment" parameterType="ArticleComment" useGeneratedKeys="true" keyProperty="id">
        insert into blog_article_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createTime != null ">createTime,</if>
            <if test="deleteTime != null ">deleteTime,</if>
            <if test="status != null ">status,</if>
            <if test="userId != null ">userId,</if>
            <if test="userName != null ">userName,</if>
            <if test="content != null  and content != ''">content,</if>
            <if test="articleId != null ">articleId,</if>
            <if test="replyId != null ">replyId,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createTime != null ">#{createTime},</if>
            <if test="deleteTime != null ">#{deleteTime},</if>
            <if test="status != null ">#{status},</if>
            <if test="userId != null ">#{userId},</if>
            <if test="userName != null ">#{userName},</if>
            <if test="content != null  and content != ''">#{content},</if>
            <if test="articleId != null ">#{articleId},</if>
            <if test="replyId != null ">#{replyId},</if>
         </trim>
    </insert>

    <update id="updateArticleComment" parameterType="ArticleComment">
        update blog_article_comment
        <trim prefix="SET" suffixOverrides=",">
            <if test="createTime != null ">createTime = #{createTime},</if>
            <if test="deleteTime != null ">deleteTime = #{deleteTime},</if>
            <if test="status != null ">status = #{status},</if>
            <if test="userId != null ">userId = #{userId},</if>
            <if test="content != null  and content != ''">content = #{content},</if>
            <if test="articleId != null ">articleId = #{articleId},</if>
            <if test="replyId != null ">replyId = #{replyId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteArticleCommentById" parameterType="Long">
        delete from blog_article_comment where id = #{id}
    </delete>

    <delete id="deleteArticleCommentByIds" parameterType="String">
        delete from blog_article_comment where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>